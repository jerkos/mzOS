{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to mzOS project\n\n\nmzOS\n is a small library to perform deisotoping and feature annotation from an extracted feature list (commonly designed by \npeaklist\n) in LC-MS (Liquid Chromatography coupled to mass spectrometry) datasets.\n\n\nBasically, you run first XCMS (using the classical pipeline), giving as a result a peaklist file. This is this result file that mzOS uses. Other feature extraction softwares might be supported later (OpenMS). \n\n\nInstallation\n\n\nmzOS (last version 0.1.3) install should be pretty straightforward. The last version at the moment is  0.1.3. Simply using\n\n\n\n\npip install mzos\n\n\n\n\nYou can also download a zip archive from \ngithub\n for example. Unzip the archive then\n\n\n\n\ncd mzOS\n\n\npython setup.py install\n\n\n\n\nThe project is quite heavy (around 20Mo), actually it comes with LMSD and HMDB databases.\n\n\nIt is still in alpha stage and is not bug free.\n\n\nProject layout\n\n\nscripts/        # Scripts used to rebuild database sqlite files.\nthird_party/    # small utility to calculate efficiently theoritical isotopic pattern\n    emass/\n        ...     # emass files\nressources/     # contains databases, isotopes and adducts list\n\n...             # mzOS python modules", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mzos-project", 
            "text": "mzOS  is a small library to perform deisotoping and feature annotation from an extracted feature list (commonly designed by  peaklist ) in LC-MS (Liquid Chromatography coupled to mass spectrometry) datasets.  Basically, you run first XCMS (using the classical pipeline), giving as a result a peaklist file. This is this result file that mzOS uses. Other feature extraction softwares might be supported later (OpenMS).", 
            "title": "Welcome to mzOS project"
        }, 
        {
            "location": "/#installation", 
            "text": "mzOS (last version 0.1.3) install should be pretty straightforward. The last version at the moment is  0.1.3. Simply using   pip install mzos   You can also download a zip archive from  github  for example. Unzip the archive then   cd mzOS  python setup.py install   The project is quite heavy (around 20Mo), actually it comes with LMSD and HMDB databases.  It is still in alpha stage and is not bug free.", 
            "title": "Installation"
        }, 
        {
            "location": "/#project-layout", 
            "text": "scripts/        # Scripts used to rebuild database sqlite files.\nthird_party/    # small utility to calculate efficiently theoritical isotopic pattern\n    emass/\n        ...     # emass files\nressources/     # contains databases, isotopes and adducts list\n\n...             # mzOS python modules", 
            "title": "Project layout"
        }, 
        {
            "location": "/run_analysis/", 
            "text": "Running mzOS as a script\n\n\nPerform analysis\n\n\nInstalling mzOS made a script available in your current environnement. It is called \nmzos\n. The aim of this script is to perform an analysis given a XCMS peaklist:\n\n\n\n\nDeisotoping\n\n\nFeature annotation (adducts, fragments)\n\n\nDatabase search (only HMDB and LMSD are supported for now)\n\n\nAnnotation confidence estimation\n\n\nusing network presence/missing metabolites information (Bayesian inference)\n\n\nusing observed/theoritical isotopic pattern\n\n\n\n\n\n\n\n\nParameters\n\n\nparser.add_argument(\"-x\", \"--xcms_pkl\", type=str, help=\"path to the xcms peaklist\", required=True)\nparser.add_argument(\"-p\", \"--polarity\", default='negative', choices=['negative', 'positive'], help='experiment polarity', required=True)\nparser.add_argument(\"--mz_tol_ppm\", type=float, default=10.0, help='mass over charge tolerance', required=False)\nparser.add_argument(\"--dims\", default=False, action='store_true', help='direct infusion MS experiment', required=False)\nparser.add_argument('--db', default='hmdb', choices=['hmdb', 'lmsd', 'hmdb + lmsd'], required=False)\nparser.add_argument(\"--output\", type=str, default=\"annotations.tsv\", required=False)\nparser.add_argument(\"--bayes\", default=True, required=False)\n\n\n\n--xcms_pkl\n\n\nSimply the path to the XCMS peaklist\n\n\n--polarity\n\n\nPolarity used to acquire spectra. Should be 'negative' or 'positive'\n\n\n--mz_tol_ppm\n\n\nTolerance in mass precision used in algorithm (in ppm). Defautlt 10.\n\n\n--dims\n\n\nIf the experiment is a direct infusion experiment True or False.\n\n\n--db\n\n\nDatabase to search for. 'hmdb' or 'lmsd' or 'hmdb + lmsd'\n\n\n--ouput\n\n\nPath to the result directory\n\n\n--bayes\n\n\nPerform Bayesian algorithm or not (can be time consuming). True or False.\n\n\nExample\n\n\nBe sure to activate the virtual environnement where you installed mzOS.\n\n\nmzos --xcms_pkl C:\\Users\\M\\xcms_results.tsv --polarity 'negative' --db 'hmdb + lmsd' --output '.\\annotations.csv'\n\n\nResult file\n\n\nMatrix with several columns:\n\n\n\n\n\n\nid\n: id of the feature.\n\n\n\n\n\n\nmz\n: mass over charge\n\n\n\n\n\n\ntime\n: time elution\n\n\n\n\n\n\nMain putative attribution\n: the most probable tag that can be assigned to this feature. It can be:\n\n\n\n\n\n\na \nmonoistope + n isotopes + n adducts/fragments\n\n\n\n\n\n\nan isotope (C13 ...)\n\n\n\n\n\n\nan adduct\n\n\n\n\n\n\na fragment\n\n\n\n\n\n\nnothing\n\n\n\n\n\n\n\n\n\n\nMain attribution pattern composition\n: one of the most important column, showing all relations between features. For example:\n\n\n\n\n\n\nfeature detected as an isotope in \nMain putative tag\n shows \nIsotope C13 of 2546 for charge=1\n. Here you can find to which feature it has been detected as a C13 isotope. You have also a charge information.\n\n\n\n\n\n\nfeature detected as a monoisotope: \n\n\n\n\n\n\n\n\n\n\nPutative secondary attributions\n: All possible other attributions (or tag) that algorithm found but set as secondary (main is considered as the most probable)\n\n\n\n\n\n\nPutative annotation\n: matching metabolite(s)\n\n\n\n\n\n\nPutative formula\n: chemical formula of the matching metabolite\n\n\n\n\n\n\nInchi\n: inchi metabolite formula\n\n\n\n\n\n\nDatabase_id\n: Database Id, HMDB_ID and KEGG_ID\n\n\n\n\n\n\nIsotopic pattern matching score\n:\n\n\n\n\n\n\nAnnotation assignment probability\n:\n\n\n\n\n\n\nAnnotation pattern composition\n:", 
            "title": "Run mzos script"
        }, 
        {
            "location": "/run_analysis/#running-mzos-as-a-script", 
            "text": "", 
            "title": "Running mzOS as a script"
        }, 
        {
            "location": "/run_analysis/#perform-analysis", 
            "text": "Installing mzOS made a script available in your current environnement. It is called  mzos . The aim of this script is to perform an analysis given a XCMS peaklist:   Deisotoping  Feature annotation (adducts, fragments)  Database search (only HMDB and LMSD are supported for now)  Annotation confidence estimation  using network presence/missing metabolites information (Bayesian inference)  using observed/theoritical isotopic pattern", 
            "title": "Perform analysis"
        }, 
        {
            "location": "/run_analysis/#parameters", 
            "text": "parser.add_argument(\"-x\", \"--xcms_pkl\", type=str, help=\"path to the xcms peaklist\", required=True)\nparser.add_argument(\"-p\", \"--polarity\", default='negative', choices=['negative', 'positive'], help='experiment polarity', required=True)\nparser.add_argument(\"--mz_tol_ppm\", type=float, default=10.0, help='mass over charge tolerance', required=False)\nparser.add_argument(\"--dims\", default=False, action='store_true', help='direct infusion MS experiment', required=False)\nparser.add_argument('--db', default='hmdb', choices=['hmdb', 'lmsd', 'hmdb + lmsd'], required=False)\nparser.add_argument(\"--output\", type=str, default=\"annotations.tsv\", required=False)\nparser.add_argument(\"--bayes\", default=True, required=False)  --xcms_pkl  Simply the path to the XCMS peaklist  --polarity  Polarity used to acquire spectra. Should be 'negative' or 'positive'  --mz_tol_ppm  Tolerance in mass precision used in algorithm (in ppm). Defautlt 10.  --dims  If the experiment is a direct infusion experiment True or False.  --db  Database to search for. 'hmdb' or 'lmsd' or 'hmdb + lmsd'  --ouput  Path to the result directory  --bayes  Perform Bayesian algorithm or not (can be time consuming). True or False.", 
            "title": "Parameters"
        }, 
        {
            "location": "/run_analysis/#example", 
            "text": "Be sure to activate the virtual environnement where you installed mzOS.  mzos --xcms_pkl C:\\Users\\M\\xcms_results.tsv --polarity 'negative' --db 'hmdb + lmsd' --output '.\\annotations.csv'", 
            "title": "Example"
        }, 
        {
            "location": "/run_analysis/#result-file", 
            "text": "Matrix with several columns:    id : id of the feature.    mz : mass over charge    time : time elution    Main putative attribution : the most probable tag that can be assigned to this feature. It can be:    a  monoistope + n isotopes + n adducts/fragments    an isotope (C13 ...)    an adduct    a fragment    nothing      Main attribution pattern composition : one of the most important column, showing all relations between features. For example:    feature detected as an isotope in  Main putative tag  shows  Isotope C13 of 2546 for charge=1 . Here you can find to which feature it has been detected as a C13 isotope. You have also a charge information.    feature detected as a monoisotope:       Putative secondary attributions : All possible other attributions (or tag) that algorithm found but set as secondary (main is considered as the most probable)    Putative annotation : matching metabolite(s)    Putative formula : chemical formula of the matching metabolite    Inchi : inchi metabolite formula    Database_id : Database Id, HMDB_ID and KEGG_ID    Isotopic pattern matching score :    Annotation assignment probability :    Annotation pattern composition :", 
            "title": "Result file"
        }, 
        {
            "location": "/informations/", 
            "text": "", 
            "title": "What is it doing exactly ?"
        }, 
        {
            "location": "/roadmap/", 
            "text": "", 
            "title": "Roadmap"
        }
    ]
}